function addClass(node, cls) {
    if (!node.length) node = [node];
    for (var n = 0, m = node.length; n < m; n++) {
        if ((" " + node[n].className + " ").indexOf(" " + cls + " ") == -1) {
            node[n].className += " " + cls;
        }
    }
}

function NumbersOnly(campo) {
    var digits = "0123456789";
    var campo_temp;
    for (var i = 0; i < campo.value.length; i++) {
        campo_temp = campo.value.substring(i, i + 1);
        if (digits.indexOf(campo_temp) === -1) {
            campo.value = campo.value.substring(0, i);
            break;
        }
    }
}

function LettersOnly(campo) {
    var digits = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzáàãâäéèêëíìîïóòõôöúùûüçÁÀÃÂÄÉÈÊËÍÌÎÏÓÒÕÖÔÚÙÛÜÇ ";
    var campo_temp;
    for (var i = 0; i < campo.value.length; i++) {
        campo_temp = campo.value.substring(i, i + 1);
        if (digits.indexOf(campo_temp) === -1) {
            campo.value = campo.value.substring(0, i);
            break;
        }
    }
}

function NumbersAndLetters(campo) {
    var digits = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzáàãâäéèêëíìîïóòõôöúùûüçÁÀÃÂÄÉÈÊËÍÌÎÏÓÒÕÖÔÚÙÛÜÇ 0123456789";
    var campo_temp;
    for (var i = 0; i < campo.value.length; i++) {
        campo_temp = campo.value.substring(i, i + 1);
        if (digits.indexOf(campo_temp) === -1) {
            campo.value = campo.value.substring(0, i);
            break;
        }
    }
}

function RemoveAccent(palavra) {
    var com_acento = '.áàãâäéèêëíìîïóòõôöúùûüçÁÀÃÂÄÉÈÊËÍÌÎÏÓÒÕÖÔÚÙÛÜÇ';
    var sem_acento = '.aaaaaeeeeiiiiooooouuuucAAAAAEEEEIIIIOOOOOUUUUC';
    var nova = '';
    for (var i = 0; i < palavra.length; i++) {
        if (palavra.substr(i, 1) !== ")" && palavra.substr(i, 1) !== "(") {
            if (com_acento.search(palavra.substr(i, 1)) >= 0) {
                nova += sem_acento.substr(com_acento.search(palavra.substr(i, 1)), 1);
            } else {
                nova += palavra.substr(i, 1);
            }
        } else {
            if (palavra.substr(i, 1) === ")") {
                nova += ")";
            } else {
                if (palavra.substr(i, 1) === "(") {
                    nova += "(";
                }
            }
        }
    }
    return nova;
}

function clearDadosPayment() {
    var elementCreditCardNumber = document.getElementById("numerocartaocredito");
    var mesExpiration = document.getElementById("mesExpiracao");
    var anoExpiration = document.getElementById("anoExpiracao");
    var codVerificacao = document.getElementById("codigoverificacao");
    var nomeCartao = document.getElementById("nomecartao");
    if (elementCreditCardNumber !== undefined && elementCreditCardNumber !== null) {
        elementCreditCardNumber.value = "";
    }
    if (mesExpiracao !== undefined && mesExpiracao !== null) {
        mesExpiracao.value = "";
    }
    if (anoExpiracao !== undefined && anoExpiracao !== null) {
        anoExpiracao.value = "";
    }
    if (codVerificacao !== undefined && codVerificacao !== null) {
        codVerificacao.value = "";
    }
    if (nomeCartao !== undefined && nomeCartao !== null) {
        nomeCartao.value = "";
    }
}

function GenerateExpirationDateCreditCard() {
    var formNewOrder = document.getElementById("formneworder");
    var elementMonthExpirationDate = formNewOrder.mesExpiracao,
        elementYearExpirationDate = formNewOrder.anoExpiracao;
    var elementExpirationDate = "";
    if (elementMonthExpirationDate !== null && elementMonthExpirationDate !== undefined) {
        if (elementYearExpirationDate !== null && elementYearExpirationDate !== undefined) {
            elementExpirationDate = elementMonthExpirationDate.value + elementYearExpirationDate.value;
        } else {}
    } else {}
    return elementExpirationDate;
}

function GenerateArrayProducts() {
    var produtos = new Array();
    var elementProductId = document.getElementById("field-identifcation-product").value;
    var elementProductValue = document.getElementById("field-price-product").value;
    produtos[elementProductId] = elementProductValue;
    return produtos;
}

function GenerateArrayShippings() {
    var formasEnvio = new Array(),
        idFormaEnvio;
    $('#forma-envio option').each(function() {
        formasEnvio[idFormaEnvio] = $(this).attr('value');
    });
    return formasEnvio;
}

function CalculateTotalPurchase(idProduto) {
    var produtos = GenerateArrayProducts();
    var parcela = $("#totalparcelas").val();
    if (idProduto !== null && idProduto !== undefined) {
        var precoProduto = produtos[idProduto];
        var valorTotal = (parseFloat(precoProduto));
        $("#total_amount").text(parcela + "x de R$ " + ((valorTotal / parcela).toFixed(2)).replace(".", ","));
    }
}

function isValidNumberCreditCard(creditCardNumber, creditCardType) {
    var elementCreditCardNumber = $("#numerocartaocredito").val();
    if (creditCardType != 'boleto' && creditCardType != 'pagseguro') {
        var isValid = false;
        var ccCheckRegExp = /[^\d ]/;
        isValid = !ccCheckRegExp.test(creditCardNumber);
        if (isValid) {
            var cardNumbersOnly = creditCardNumber.replace(/ /g, "");
            var cardNumberLength = cardNumbersOnly.length;
            var lengthIsValid = false;
            var prefixIsValid = false;
            var prefixRegExp;
            switch (creditCardType) {
                case "master":
                    lengthIsValid = (cardNumberLength === 16);
                    prefixRegExp = /^5[1-5]/;
                    break;
                case "diners":
                    lengthIsValid = (cardNumberLength === 16 || cardNumberLength === 14);
                    prefixRegExp = /^3[0-8]/;
                    break;
                case "visa":
                    lengthIsValid = (cardNumberLength === 16 || cardNumberLength === 13);
                    prefixRegExp = /^4/;
                    break;
                case "amex":
                    lengthIsValid = (cardNumberLength === 15);
                    prefixRegExp = /^3(4|7)/;
                    break;
                case "elo":
                    lengthIsValid = (cardNumberLength === 16);
                    prefixRegExp = /^(636368|438935|504175|451416|636297|5067|4576|4011)/;
                    break;
                case "hipercard":
                    lengthIsValid = (cardNumberLength === 16);
                    prefixRegExp = /^(606282|3841|60)/;
                    break;
                default:
                    prefixRegExp = /^$/;
            }
            prefixIsValid = prefixRegExp.test(cardNumbersOnly);
            isValid = prefixIsValid && lengthIsValid;
        }
        if (isValid) {
            var numberProduct;
            var checkSumTotal = 0;
            for (digitCounter = cardNumberLength - 1; digitCounter >= 0; digitCounter--) {
                checkSumTotal += parseInt(cardNumbersOnly.charAt(digitCounter));
                digitCounter--;
                numberProduct = String((cardNumbersOnly.charAt(digitCounter) * 2));
                for (var productDigitCounter = 0; productDigitCounter < numberProduct.length; productDigitCounter++) {
                    checkSumTotal += parseInt(numberProduct.charAt(productDigitCounter));
                }
            }
            isValid = (checkSumTotal % 10 === 0);
        }
        if (!isValid) {
            alert("Número de Cartão Inválido! Digite-o novamente.");
            document.getElementById("numerocartaocredito").value = "";
            return false;
        }
    }
    return true;
}

function ValidNumberCPF(cpf, tipo) {
    if (!_IsValidCPFNumber(cpf)) {
        var formNewOrder = document.getElementById('formneworder');
        if (tipo !== undefined && tipo === "boleto") {} else {
            if (tipo !== undefined && tipo === "cartao") {
                alert("CPF inválido! Digite-o novamente.");
                document.getElementById('cpf').value = "";
            }
        }
    } else {
        if (tipo !== undefined && tipo === "boleto") {} else {
            if (tipo !== undefined && tipo === "cartao") {}
        }
    }
}

function _IsValidPhoneNumber(phone) {
    phone = phone.value.replace(/[^\d]+/g, '');
    if (phone.length < 10 || phone.length > 12) {
        return false;
    } else {
        return true;
    }
}

function _IsValidCPFNumber(cpf) {
    cpf = cpf.replace(/[^\d]+/g, '');
    if (cpf === '') return false;
    if (cpf.length !== 11 || cpf === "00000000000" || cpf === "11111111111" || cpf === "22222222222" || cpf === "33333333333" || cpf === "44444444444" || cpf === "55555555555" || cpf === "66666666666" || cpf === "77777777777" || cpf === "88888888888" || cpf === "99999999999") return false;
    add = 0;
    for (i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);
    rev = 11 - (add % 11);
    if (rev === 10 || rev === 11) rev = 0;
    if (rev !== parseInt(cpf.charAt(9))) return false;
    add = 0;
    for (i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);
    rev = 11 - (add % 11);
    if (rev === 10 || rev === 11) rev = 0;
    if (rev !== parseInt(cpf.charAt(10))) return false;
    return true;
}

function validaRadio() {
    if (document.getElementById("formneworder").optionsRadios1[0].checked === false && document.getElementById("formneworder").optionsRadios1[1].checked === false) {
        return false;
    }
    return true;
}

function ValidateFieldsNewOrder() {
    var form;
    var screen = "carrinho";
    if (screen !== null && screen !== undefined && screen === "carrinho") {
        form = document.getElementById('formneworder');
    } else {
        form = document.getElementById('form-new-pedido');
    }
    var elementNome = form.nome,
        elementSobrenome = form.sobrenome,
        elementLogradouro = form.endereco,
        elementBairro = form.bairro,
        elementCidade = form.cidade,
        elementEstado = form.estado,
        elementCEP = form.cep,
        elementEmail = form.email,
        elementFone = form.telefone,
        emailValido = /^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/,
        elementNumero = form.numero,
        elementComplemento = form.complemento;

    var minMonth = new Date().getMonth() + 1;
    var minYear = new Date().getFullYear() - 2000;
    var month = 0;
    var year = 0;

    elementNome.value = RemoveAccent(elementNome.value);
    elementSobrenome.value = RemoveAccent(elementSobrenome.value);
    elementLogradouro.value = RemoveAccent(elementLogradouro.value).trim();
    elementBairro.value = RemoveAccent(elementBairro.value).trim();
    elementCidade.value = RemoveAccent(elementCidade.value);
    elementComplemento.value = RemoveAccent(elementComplemento.value);
    var elementCPF = document.getElementById('cpf'),
        elementNumeroCartao = document.getElementById('numerocartaocredito'),
        elementMesExpiration = document.getElementById('mesExpiracao'),
        elementAnoExpiration = document.getElementById('anoExpiracao'),
        elementCVV = document.getElementById('codigoverificacao'),
        elementNomeCartao = document.getElementById('nomecartao'),
        elementTypeCartao = document.getElementById('tipocartao');

    if (elementMesExpiration.value !== "")
        month = parseInt(elementMesExpiration.value, 10);
    if (elementAnoExpiration.value !== "")
        year = parseInt(elementAnoExpiration.value, 10);
    

    if (elementNome.value === "") {
        elementNome.focus();
        alert("Preencher o campo nome");
        elementNome.setAttribute("class", "input-erro");
        return false;
    } else if (elementSobrenome.value === "") {
        elementSobrenome.focus();
        alert("Preencher o campo sobrenome");
        elementSobrenome.setAttribute("class", "input-erro");
        return false;
    } else if (elementCPF.value === "") {
        elementCPF.focus();
        alert("Preencher o campo CPF");
        elementCPF.setAttribute("class", "input-erro");
        return false;
    } else if (!_IsValidCPFNumber(elementCPF.value)) {
        elementCPF.focus();
        elementCPF.value = '';
        alert("CPF inválido");
        elementCPF.setAttribute("class", "input-erro");
        return false;
    } else if (elementFone.value === "") {
        elementFone.focus();
        alert("Preencher o campo de Telefone");
        elementFone.setAttribute("class", "input-erro");
        return false;
    } else if (!_IsValidPhoneNumber(elementFone)) {
        alert("Telefone informado é inválido! DDD + Número (Ex. 11987654321)");
        return false;
    } else if (elementCEP.value === "") {
        elementCEP.focus();
        alert("Preencher o campo CEP");
        elementCEP.setAttribute("class", "input-erro");
        return false;
    } else if (elementCEP.value.indexOf("-") > 0) {
        elementCEP.focus();
        alert("Número de CEP inválido");
        elementCEP.setAttribute("class", "input-erro");
    } else if (elementCEP.value.length < 8) {
        elementCEP.focus();
        alert("Número de CEP inválido");
        elementCEP.setAttribute("class", "input-erro");
        return false;
    } else if (elementLogradouro.value === "") {
        elementLogradouro.focus();
        alert("Preencher o campo Endereço");
        elementLogradouro.setAttribute("class", "input-erro");
        return false;
    } else if (elementNumero.value === "") {
        elementNumero.focus();
        alert("Preencher o campo Número");
        elementNumero.setAttribute("class", "input-erro");
        return false;
    } else if (elementBairro.value === "") {
        elementBairro.focus();
        alert("Preencher o campo Bairro");
        elementBairro.setAttribute("class", "input-erro");
        return false;
    } else if (elementCidade.value === "") {
        elementCidade.focus();
        alert("Preencher o campo Cidade");
        elementCidade.setAttribute("class", "input-erro");
        return false;
    } else if (elementEstado.value === "") {
        elementEstado.focus();
        alert("Preencher o campo Estado");
        elementEstado.setAttribute("class", "input-erro");
        return false;
    } else if (elementEmail.value === "") {
        elementEmail.focus();
        alert("Preencher o campo E-mail");
        elementEmail.setAttribute("class", "input-erro");
        return false;
    } else if (!emailValido.test(elementEmail.value)) {
        elementEmail.value = "";
        elementEmail.focus();
        alert("Campo de E-mail inválido");
        elementEmail.setAttribute("class", "input-erro");
        return false;
    } else if (elementTypeCartao.value === '') {
        elementTypeCartao.focus();
        alert("Selecione o Tipo de Pagamento");
        return false;
    } else if (elementNomeCartao.value === "" && elementTypeCartao.value != 'boleto' && elementTypeCartao.value != 'pagseguro') {
        elementNomeCartao.focus();
        alert("Preencher o campo Nome impresso no cartão");
        elementNomeCartao.setAttribute("class", "input-erro");
        return false;
    } else if (elementNumeroCartao.value === "" && elementTypeCartao.value != 'boleto' && elementTypeCartao.value != 'pagseguro') {
        elementNumeroCartao.focus();
        alert("Preencher o campo Nome Número do cartão");
        return false;
    } else if (!isValidNumberCreditCard(elementNumeroCartao.value, elementTypeCartao.value)) {
        return false;
    } else if (elementMesExpiration.value === "" && elementTypeCartao.value != 'boleto' && elementTypeCartao.value != 'pagseguro') {
        alert("Preencha o mês de Expiração do Cartão");
        return false;
    } else if (elementAnoExpiration.value === "" && elementTypeCartao.value != 'boleto' && elementTypeCartao.value != 'pagseguro') {
        alert("Preencha o ano de Expiração do Cartão");
        return false;
    } else if (elementTypeCartao.value != 'boleto' && elementTypeCartao.value != 'pagseguro' && (year < minYear || (year === minYear && month < minMonth))) {
        alert("Cartão com Validade Vencida");
        return false;
    } else if (elementCVV.value === "" && elementTypeCartao.value != 'boleto' && elementTypeCartao.value != 'pagseguro') {
        elementCVV.focus();
        alert("Coloque o código de segurança do cartão");
        elementLogradouro.setAttribute("class", "input-erro");
        return false;
    } else {
        $(".frm").find(".input-erro").removeAttr("class");
        return true;
    }
}

function ValidateFieldsNewOrderUpSell() {
    var form;
    var screen = "carrinho";
    if (screen !== null && screen !== undefined && screen === "carrinho") {
        form = document.getElementById('formneworder');
    } else {
        form = document.getElementById('form-new-pedido');
    }

    var elementNumeroCartao = $("#numerocartaocredito"),
        elementMesExpiration = document.getElementById('mesExpiracao'),
        elementAnoExpiration = document.getElementById('anoExpiracao'),
        elementCVV = $("#codigoverificacao"),
        elementNomeCartao = $("#nomecartao"),
        elementTypeCartao = $("#tipocartao");
    if (elementTypeCartao.val() === '') {
        elementTypeCartao.focus();
        alert("Selecione o Tipo de Pagamento");
        return false;
    } else if (elementNomeCartao.val() === "" && elementTypeCartao.val() != 'boleto' && elementTypeCartao.val() != 'pagseguro') {
        elementNomeCartao.focus();
        alert("Preencher o campo Nome impresso no cartão");
        elementNomeCartao.setAttribute("class", "input-erro");
        return false;
    } else if (elementNumeroCartao.val() === "" && elementTypeCartao.val() != 'boleto' && elementTypeCartao.val() != 'pagseguro') {
        elementNumeroCartao.focus();
        alert("Preencher o campo Nome Número do cartão");
        return false;
    } else if (!isValidNumberCreditCard(elementNumeroCartao.val(), elementTypeCartao.val())) {
        return false;
    } else if (elementMesExpiration.value === "" && elementTypeCartao.val() != 'boleto' && elementTypeCartao.val() != 'pagseguro') {
        alert("Preencha o mês de Expiração do Cartão");
        return false;
    } else if (elementAnoExpiration.value === "" && elementTypeCartao.val() != 'boleto' && elementTypeCartao.val() != 'pagseguro') {
        alert("Preencha o ano de Expiração do Cartão");
        return false;
    } else if (elementCVV.val() === "" && elementTypeCartao.val() != 'boleto' && elementTypeCartao.val() != 'pagseguro') {
        elementCVV.focus();
        alert("Coloque o código de segurança do cartão");
        elementLogradouro.setAttribute("class", "input-erro");
        return false;
    } else {
        $(".frm").find(".input-erro").removeAttr("class");
        return true;
    }
}

var order_id_pagseguro;
function SendFormNewOrder() {

    //if (document.getElementById("concordo").checked == false) {
    //    alert("Para realizar a compra é necessário aceitar os termos do site.");
    //    return;
    //}

    endOpen();

    if (ValidateFieldsNewOrder()) {
        if ($("#tipocartao").val() == "pagseguro") {

            $.ajax({
                //pegando a url apartir da action do form             
                url: 'Transactions.aspx?ID=GetCodePagseguro',
                data: $("#formneworder").serialize(),
                type: 'POST',
                beforeSend: function () {

                    // Mostra a mensagem de carregando
                    $("#loader").fadeIn("fast");
                    //                $("#loader").removeClass("hidden");

                },
                complete: function () {

                    // Oculta a mensagem carregando
                    $("#loader").fadeOut("slow");
                },
                success: function (data) {
                    if (data == "ERROR" || data == "")
                        alert("Houve um problema com a requisição ao PagSeguro, por favor tente mais tarde. Se o problema persistir entre em contato com nossos atendentes");
                    else {
                        var retorno = data.split('|');
                        order_id_pagseguro = retorno[1];

                        OpenLightboxPagSeguro(retorno[0]);
                    }
                }
            });
        } else {
            $.ajax({
                //pegando a url apartir da action do form             
                url: 'Transactions.aspx?ID=NewOrderAmostra',
                data: $("#formneworder").serialize(),
                type: 'POST',
                beforeSend: function () {

                    // Mostra a mensagem de carregando
                    $("#loader").fadeIn("fast");
                    //                $("#loader").removeClass("hidden");

                },
                complete: function () {

                    // Oculta a mensagem carregando
                    $("#loader").fadeOut("slow");
                },
                success: function (data) {

                    var response = data.split('|');

                    if (response[0] == "100") {

                        _internal = true;
                        location.href = response[2] + ".aspx?oid=" + response[1];
                    }
                    else {

                        clearDadosPayment();
                        alert('Pagamento não autorizado, favor verificar com a operadora de seu cartão ou entre em contato com nosso atendimento.');
                    }
                }
            });
        }
    }
}



function SendFormNewOrderAmostra() {

    //if (document.getElementById("concordo").checked == false) {
    //    alert("Para realizar a compra é necessário aceitar os termos do site.");
    //    return;
    //}

    endOpen();

    if (ValidateFieldsNewOrder()) {
        if ($("#tipocartao").val() == "pagseguro") {

            $.ajax({
                //pegando a url apartir da action do form             
                url: 'Transactions.aspx?ID=GetCodePagseguro',
                data: $("#formneworder").serialize(),
                type: 'POST',
                beforeSend: function () {

                    // Mostra a mensagem de carregando
                    $("#loader").fadeIn("fast");
                    //                $("#loader").removeClass("hidden");

                },
                complete: function () {

                    // Oculta a mensagem carregando
                    $("#loader").fadeOut("slow");
                },
                success: function (data) {
                    if (data == "ERROR" || data == "")
                        alert("Houve um problema com a requisição ao PagSeguro, por favor tente mais tarde. Se o problema persistir entre em contato com nossos atendentes");
                    else {
                        var retorno = data.split('|');
                        order_id_pagseguro = retorno[1];

                        OpenLightboxPagSeguro(retorno[0]);
                    }
                }
            });
        } else {
            $.ajax({
                //pegando a url apartir da action do form             
                url: 'Transactions.aspx?ID=NewOrderAmostra',
                data: $("#formneworder").serialize(),
                type: 'POST',
                beforeSend: function () {

                    // Mostra a mensagem de carregando
                    $("#loader").fadeIn("fast");
                    //                $("#loader").removeClass("hidden");

                },
                complete: function () {

                    // Oculta a mensagem carregando
                    $("#loader").fadeOut("slow");
                },
                success: function (data) {

                    var response = data.split('|');

                    if (response[0] == "100") {

                        _internal = true;
                        location.href = response[2] + ".aspx?oid=" + response[1];
                    }
                    else {

                        clearDadosPayment();
                        alert('Codigo: ' + response[0] + '\n' + response[1]);
                    }
                }
            });
        }
    }
}

function SendFormNewOrderUpSell() {

    //if (document.getElementById("concordo").checked == false) {
    //    alert("Para realizar a compra é necessário aceitar os termos do site.");
    //    return;
    //}

    //endOpen();

    if (ValidateFieldsNewOrderUpSell()) {
        if ($("#tipocartao").val() == "pagseguro") {
            $.ajax({
                //pegando a url apartir da action do form             
                url: 'Transactions.aspx?ID=GetCodePagseguro',
                data: $("#formneworder").serialize(),
                type: 'POST',
                beforeSend: function () {

                    // Mostra a mensagem de carregando
                    $("#loader").fadeIn("fast");
                    //                $("#loader").removeClass("hidden");

                },
                complete: function () {

                    // Oculta a mensagem carregando
                    $("#loader").fadeOut("slow");
                },
                success: function (data) {
                    if (data == "ERROR" || data == "")
                        alert("Houve um problema com a requisição ao PagSeguro, por favor tente mais tarde. Se o problema persistir entre em contato com nossos atendentes");
                    else {
                        var retorno = data.split('|');
                        order_id_pagseguro = retorno[1];

                        OpenLightboxPagSeguro(retorno[0]);
                    }
                }
            });
        } else {
            $.ajax({
                //pegando a url apartir da action do form             
                url: 'Transactions.aspx?ID=NewOrderUpSell',
                data: $("#formneworder").serialize(),
                type: 'POST',
                beforeSend: function () {

                    // Mostra a mensagem de carregando
                    $("#loader").fadeIn("fast");
                    //                $("#loader").removeClass("hidden");

                },
                complete: function () {

                    // Oculta a mensagem carregando
                    $("#loader").fadeOut("slow");
                },
                success: function (data) {

                    var response = data.split('|');

                    if (response[0] == "100") {

                        _internal = true;
                        location.href = response[2] + ".aspx?oid=" + response[1];
                    }
                    else {

                        clearDadosPayment();
                        alert('Codigo: ' + response[0] + '\n' + response[1]);
                    }
                }
            });
        }
    }
}

function SendFormNewOrderValidated() {
    $.ajax({
        url: 'Transactions.aspx?ID=NewOrder',
        data: $("#formneworder").serialize(),
        type: 'POST',
        beforeSend: function() {
            $("#loader").fadeIn("fast");
        },
        complete: function() {
            $("#loader").fadeOut("slow");
        },
        success: function(data) {
            var response = data.split('|');
            if (response[0] == "100") {
                $('#alert_show').val('0');
                _internal = true;
                location.href = response[2] + ".aspx?oid=" + response[1];
            } else {
                clearDadosPayment();
                alert('Codigo: ' + response[0] + '\n' + response[1]);
            }
        }
    });
}

$(function() {
    $("#nome").attr("maxlength", "35");
    $("#sobrenome").attr("maxlength", "20");
    $("#endereco").attr("maxlength", "55");
    $("#bairro").attr("maxlength", "30");
    $("#cidade").attr("maxlength", "40");
    $("#numero").attr("maxlength", "6");
    $("#complemento").attr("maxlength", "55");
});
